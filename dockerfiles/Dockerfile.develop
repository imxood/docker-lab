FROM ubuntu:xenial
MAINTAINER imxood <imxood@163.com>

ENV DEBIAN_FRONTEND noninteractive

ENV HOME /home/imxood

RUN sed -i -e "s%archive.ubuntu.com%mirrors.163.com%g" /etc/apt/sources.list \
	&& apt-get -y update \
	&& apt-get -y --no-install-recommends install apt-utils apt-transport-https\
	&& apt-get -y autoclean \
	&& apt-get -y autoremove \
	&& rm -rf /var/cache/apt/archives/*.deb

ENV LANG zh_CN.UTF-8

RUN apt-get -y install locales \
	&& locale-gen $LANG \
	&& dpkg-reconfigure locales \
	&& apt-get -y install fcitx fcitx-googlepinyin im-config \
	&& apt-get -y --no-install-recommends install ttf-wqy-microhei ttf-wqy-zenhei \
	&& apt-get -y autoclean \
	&& apt-get -y autoremove \
	&& rm -rf /var/cache/apt/archives/*.deb

RUN apt-get -y install xfce4 xfce4-terminal \
	&& apt-get -y autoclean \
	&& apt-get -y autoremove \
	&& rm -rf /var/cache/apt/archives/*.deb

### Install vim wget curl zip unzip git gcc g++ gdb make
RUN apt-get -y --no-install-recommends install \
		vim wget curl zip unzip git gcc g++ gdb make \
	&& apt-get -y install net-tools \
	&& apt-get -y autoclean \
	&& apt-get -y autoremove \
	&& rm -rf /var/cache/apt/archives/*.deb

### Install tigervnc
RUN wget -q --no-check-certificate \
			https://dl.bintray.com/tigervnc/stable/tigervnc-1.7.0.x86_64.tar.gz \
	&& tar -xzf tigervnc-1.7.0.x86_64.tar.gz --strip 1 -C / \
	&& rm -f tigervnc-1.7.0.x86_64.tar.gz

### Install QT 5.7

ENV QT=5.7.1
ENV QTM=5.7

COPY config/install_files/qt /install_files/qt
COPY qt-opensource-linux-x64-5.7.1.run /install_files/qt/installer.run
RUN /install_files/qt/qt.sh

### Install vscode
COPY config/install_files/vscode.sh /install_files/vscode.sh
RUN /install_files/vscode.sh

### Install noVNC - HTML5 based VNC viewer
COPY config/install_files/no_vnc.sh /install_files/no_vnc.sh
RUN /install_files/no_vnc.sh

### Install qemu
RUN apt-get install -y --no-install-recommends qemu-system-x86 \
    && apt-get autoclean -y \
    && apt-get autoremove -y \
    && rm -rf /var/cache/apt/archives/*.deb

### Install python3.5 pip tensorflow
RUN apt-get -y install python3.5 \
	&& ln -s /usr/bin/python3 /usr/bin/python \
	&& wget https://bootstrap.pypa.io/get-pip.py \
	&& python get-pip.py \
	&& pip install tensorflow \
	&& rm -f get-pip.py \
	&& apt-get -y autoclean \
	&& apt-get -y autoremove \
	&& rm -rf /var/cache/apt/archives/*.deb

COPY config/linux_0_11/ /
RUN rm -rf /install_files

### configure startup

# VNC port:5901
# noVNC webport, connect via http://localhost:6901/?password=vncpassword
ENV DISPLAY :1
ENV VNC_PORT 5901
ENV NO_VNC_PORT 6901
EXPOSE $VNC_PORT $NO_VNC_PORT

ENV VNC_COL_DEPTH 32
ENV VNC_RESOLUTION 1024x768
ENV VNC_PW vncpassword

CMD ["/startup.sh"]
